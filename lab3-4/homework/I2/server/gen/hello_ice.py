# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.10
#
# <auto-generated>
#
# Generated from file `hello.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module Hello
_M_Hello = Ice.openModule('Hello')
__name__ = 'Hello'

_M_Hello._t_Greeter = IcePy.defineValue('::Hello::Greeter', Ice.Value, -1, (), False, True, None, ())

if 'GreeterPrx' not in _M_Hello.__dict__:
    _M_Hello.GreeterPrx = Ice.createTempClass()
    class GreeterPrx(Ice.ObjectPrx):

        def greet(self, name, context=None):
            return _M_Hello.Greeter._op_greet.invoke(self, ((name, ), context))

        def greetAsync(self, name, context=None):
            return _M_Hello.Greeter._op_greet.invokeAsync(self, ((name, ), context))

        def begin_greet(self, name, _response=None, _ex=None, _sent=None, context=None):
            return _M_Hello.Greeter._op_greet.begin(self, ((name, ), _response, _ex, _sent, context))

        def end_greet(self, _r):
            return _M_Hello.Greeter._op_greet.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_Hello.GreeterPrx.ice_checkedCast(proxy, '::Hello::Greeter', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_Hello.GreeterPrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::Hello::Greeter'
    _M_Hello._t_GreeterPrx = IcePy.defineProxy('::Hello::Greeter', GreeterPrx)

    _M_Hello.GreeterPrx = GreeterPrx
    del GreeterPrx

    _M_Hello.Greeter = Ice.createTempClass()
    class Greeter(Ice.Object):

        def ice_ids(self, current=None):
            return ('::Hello::Greeter', '::Ice::Object')

        def ice_id(self, current=None):
            return '::Hello::Greeter'

        @staticmethod
        def ice_staticId():
            return '::Hello::Greeter'

        def greet(self, name, current=None):
            raise NotImplementedError("servant method 'greet' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_Hello._t_GreeterDisp)

        __repr__ = __str__

    _M_Hello._t_GreeterDisp = IcePy.defineClass('::Hello::Greeter', Greeter, (), None, ())
    Greeter._ice_type = _M_Hello._t_GreeterDisp

    Greeter._op_greet = IcePy.Operation('greet', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_string, False, 0),), (), ((), IcePy._t_string, False, 0), ())

    _M_Hello.Greeter = Greeter
    del Greeter

# End of module Hello
