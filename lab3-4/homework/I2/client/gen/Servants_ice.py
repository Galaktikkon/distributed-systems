# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.10
#
# <auto-generated>
#
# Generated from file `Servants.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module Servants
_M_Servants = Ice.openModule('Servants')
__name__ = 'Servants'

_M_Servants._t_DedicatedJar = IcePy.defineValue('::Servants::DedicatedJar', Ice.Value, -1, (), False, True, None, ())

if 'DedicatedJarPrx' not in _M_Servants.__dict__:
    _M_Servants.DedicatedJarPrx = Ice.createTempClass()
    class DedicatedJarPrx(Ice.ObjectPrx):

        def eatCookie(self, context=None):
            return _M_Servants.DedicatedJar._op_eatCookie.invoke(self, ((), context))

        def eatCookieAsync(self, context=None):
            return _M_Servants.DedicatedJar._op_eatCookie.invokeAsync(self, ((), context))

        def begin_eatCookie(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_Servants.DedicatedJar._op_eatCookie.begin(self, ((), _response, _ex, _sent, context))

        def end_eatCookie(self, _r):
            return _M_Servants.DedicatedJar._op_eatCookie.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_Servants.DedicatedJarPrx.ice_checkedCast(proxy, '::Servants::DedicatedJar', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_Servants.DedicatedJarPrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::Servants::DedicatedJar'
    _M_Servants._t_DedicatedJarPrx = IcePy.defineProxy('::Servants::DedicatedJar', DedicatedJarPrx)

    _M_Servants.DedicatedJarPrx = DedicatedJarPrx
    del DedicatedJarPrx

    _M_Servants.DedicatedJar = Ice.createTempClass()
    class DedicatedJar(Ice.Object):

        def ice_ids(self, current=None):
            return ('::Ice::Object', '::Servants::DedicatedJar')

        def ice_id(self, current=None):
            return '::Servants::DedicatedJar'

        @staticmethod
        def ice_staticId():
            return '::Servants::DedicatedJar'

        def eatCookie(self, current=None):
            raise NotImplementedError("servant method 'eatCookie' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_Servants._t_DedicatedJarDisp)

        __repr__ = __str__

    _M_Servants._t_DedicatedJarDisp = IcePy.defineClass('::Servants::DedicatedJar', DedicatedJar, (), None, ())
    DedicatedJar._ice_type = _M_Servants._t_DedicatedJarDisp

    DedicatedJar._op_eatCookie = IcePy.Operation('eatCookie', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), ((), IcePy._t_string, False, 0), ())

    _M_Servants.DedicatedJar = DedicatedJar
    del DedicatedJar

_M_Servants._t_SharedReporter = IcePy.defineValue('::Servants::SharedReporter', Ice.Value, -1, (), False, True, None, ())

if 'SharedReporterPrx' not in _M_Servants.__dict__:
    _M_Servants.SharedReporterPrx = Ice.createTempClass()
    class SharedReporterPrx(Ice.ObjectPrx):

        def getEatenStatus(self, context=None):
            return _M_Servants.SharedReporter._op_getEatenStatus.invoke(self, ((), context))

        def getEatenStatusAsync(self, context=None):
            return _M_Servants.SharedReporter._op_getEatenStatus.invokeAsync(self, ((), context))

        def begin_getEatenStatus(self, _response=None, _ex=None, _sent=None, context=None):
            return _M_Servants.SharedReporter._op_getEatenStatus.begin(self, ((), _response, _ex, _sent, context))

        def end_getEatenStatus(self, _r):
            return _M_Servants.SharedReporter._op_getEatenStatus.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_Servants.SharedReporterPrx.ice_checkedCast(proxy, '::Servants::SharedReporter', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_Servants.SharedReporterPrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::Servants::SharedReporter'
    _M_Servants._t_SharedReporterPrx = IcePy.defineProxy('::Servants::SharedReporter', SharedReporterPrx)

    _M_Servants.SharedReporterPrx = SharedReporterPrx
    del SharedReporterPrx

    _M_Servants.SharedReporter = Ice.createTempClass()
    class SharedReporter(Ice.Object):

        def ice_ids(self, current=None):
            return ('::Ice::Object', '::Servants::SharedReporter')

        def ice_id(self, current=None):
            return '::Servants::SharedReporter'

        @staticmethod
        def ice_staticId():
            return '::Servants::SharedReporter'

        def getEatenStatus(self, current=None):
            raise NotImplementedError("servant method 'getEatenStatus' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_Servants._t_SharedReporterDisp)

        __repr__ = __str__

    _M_Servants._t_SharedReporterDisp = IcePy.defineClass('::Servants::SharedReporter', SharedReporter, (), None, ())
    SharedReporter._ice_type = _M_Servants._t_SharedReporterDisp

    SharedReporter._op_getEatenStatus = IcePy.Operation('getEatenStatus', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (), (), ((), IcePy._t_string, False, 0), ())

    _M_Servants.SharedReporter = SharedReporter
    del SharedReporter

# End of module Servants
